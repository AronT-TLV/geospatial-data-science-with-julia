# What is geospatial data?

## Definition

In order to be effective as a geospatial data scientist, you need
to be able to clearly define what **geospatial data** is and what it
is not. Let's start with the most important definition of this book:

> **(Discrete) geospatial data** is the combination of a
> **table** of attributes (or features) with some discretization of a
> **geospatial domain**. For each row (or measurement) in the **table**
> there corresponds an element (or geometry) in the discretization of
> the **geospatial domain**.

The definition depends on two other definitions that we try to clarify
further now. In data science the most natural data structure for working
with data is the [table](https://en.wikipedia.org/wiki/Table_(database)).
Without big formalities, a table is any object that can be structured into
rows containing measurements and columns representing variables.
For example, @tbl-example has 5 measurements of 4 variables:

| NAME | AGE  | HEIGHT | GENDER |
|:----:|:----:|:------:|:------:|
| John |  34  | 1.78m  | male   |
| Mary |  12  | 1.56m  | female |
| Paul |  23  | 1.70m  | male   |
| Anne |  39  | 1.80m  | female |
| Kate |  28  | 1.72m  | female |

: Example of table {#tbl-example .striped .hover}

In Julia, the concept of table is formalized in
[Tables.jl](https://github.com/JuliaData/Tables.jl) by 
@Quinn2023. Notice that the concept of table is agnostic
to the machine representation, and that various implementations
can co-exist in the language. This will become clearer in the
next section.

The second definition that we need is that of a **geospatial domain**.
In geosciences, questions are often formulated within a physical
region of interest. This physical region can cover a small area
of the surface of the Earth, the entire Earth surface, or any
region of finite measure that can be discretized into smaller
geometries (a.k.a. elements):

::: {#fig-domains layout-ncol=2}

![Coast line in Islay Province, Peru. View on [Google Maps](https://www.google.com/maps/@-17.279111,-71.49577,2041m/data=!3m1!1e3?entry=ttu)](http://www.gstatic.com/prettyearth/assets/full/1096.jpg){#fig-islay-province}

![Synthetic carbonate reservoir model by @Correia2015. See [UNISIM-II](https://www.unisim.cepetro.unicamp.br/benchmarks/en/unisim-ii/overview) for more details](images/unisimII.png){#fig-unisimII}


Example of geospatial domains
:::

@fig-domains illustrates two very different examples of geospatial
domains. The domain in @fig-islay-province is widely studied
in GIS books. It is a 2D domain that contemplates a small area near
Islay Province, Peru. The domain in @fig-unisimII on the other hand
is **not** considered in traditional GIS literature. It is a 3D domain
that has been discretized into hexahedron geometries.

The concept of geospatial domain is formalized in
[Meshes.jl](https://github.com/JuliaGeometry/Meshes.jl) by
@Hoffimann2021.

### Important remarks

- Images like the one depicted in @fig-islay-province are often
  implemented in terms of the
  [array](https://en.wikipedia.org/wiki/Array_(data_structure))
  data structure. GIS books call this machine representation
  "raster data", but we will avoid this term in our framework
  in order to obtain a more general set of tools.
- According to our definition of geospatial data, "raster data"
  is simply a table with colors as variables (e.g., RGB values)
  combined with a Cartesian grid of quadrangle geometries.
  We illustrate this concept in @fig-raster by zooming in a
  satellite image of the Lena delta:

  ::: {#fig-raster layout-ncol=2}

  !["Raster data" of [Lena delta](https://en.wikipedia.org/wiki/Lena_Delta_Wildlife_Reserve)](images/lena.png){#fig-lena}

  ![Zoom reveals quadrangle geometries](images/lena-zoom.png){#fig-lena-zoom}


  Quadrangle geometries in "raster data"
  :::

- There are no constraints on the geometries used in the
  discretization of the geospatial domain. In @fig-brazil,
  Brazil is discretized into complex polygonal geometries
  that represent country states:

  ![Brazil's states represented with complex polygonal geometries. View on [Google Maps](https://www.google.com/maps/place/Brasil/@-14.2009197,-62.5722989,4z).](images/brazil.png){#fig-brazil width=40%}

- GIS books call this machine representation "vector data" because
  the geometries are stored as vectors of coordinates in memory.
  We will also avoid this term in our framework given that it
  only highlights an implementation detail.

### Geospatial vs. spatial

Before we start discussing machine representation with actual Julia
code, let's make a final (pedantic) distinction between the words
*geospatial* and *spatial*. These words mean different things
in different communities:

- In geosciences, an object is *geospatial* if it lives in
  *physical space*.
- In statistics, a model is *spatial* if it exploits the
  vicinity of samples in the *sample space*.

Given that geospatial data science deals with both concepts,
we must use these words carefully.

In [Geostatistical Learning](https://www.frontiersin.org/articles/10.3389/fams.2021.689393/full), models can exploit both spaces to
improve prediction performance, but that is out of the scope
for this first introductory book.

## Representation

## Manipulation